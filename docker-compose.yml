version: '3.7'
services:

  db:
    image: mysql:8.0.31

    container_name: ${DB_CONTAINER_NAME}

    environment:
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
      - MYSQL_DATABASE=${DB_NAME}

    ports:
      - '3306:3306'

    volumes:
      - ./db/conf:/etc/mysql/conf.d/:ro
      - ./db/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d

    networks:
      - valomemo_network

    healthcheck:
      test: ["CMD", "mysql", "-uroot", "-p${DB_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  api:
    container_name: ${API_CONTAINER_NAME}

    build:
      context: ./api
      dockerfile: Dockerfile

    environment:
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
      - MYSQL_DATABASE=${DB_NAME}
      - DB_CONTAINER_NAME=${DB_CONTAINER_NAME}
      - MAX_NUM_OF_USER=${MAX_NUM_OF_USER}
      - TABLE_NAME=${TABLE_NAME}
      - DEV_IMGUR_API_CLIENT_ID=${DEV_IMGUR_API_CLIENT_ID}
      - DEV_IMGUR_API_CLIENT_SECRET=${DEV_IMGUR_API_CLIENT_SECRET}
      - PRO_IMGUR_API_CLIENT_ID=${PRO_IMGUR_API_CLIENT_ID}
      - PRO_IMGUR_API_CLIENT_SECRET=${PRO_IMGUR_API_CLIENT_SECRET}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - DEV_OR_PRO=${DEV_OR_PRO}

    ports:
      - 8080:8080

    volumes:
      - type: bind
        source: ./api/src
        target: /usr/api/src
      - type: bind
        source: ./api/data_backups
        target: /usr/api/data_backups
      - type: bind
        source: ./common_info
        target: /usr/api/common_info

    networks:
      - valomemo_network

    depends_on:
      db:
        condition: service_healthy

  frontend:
    container_name: ${FRONTEND_CONTAINER_NAME}

    build:
      context: ./frontend
      dockerfile: Dockerfile

    ports:
    - 3000:3000

    volumes:
      - type: bind
        source: ./frontend/src
        target: /usr/frontend/src
      - type: bind
        source: ./frontend/public
        target: /usr/frontend/public
      - type: bind
        source: ./common_info
        target: /usr/frontend/src/common_info
    
    networks:
      - valomemo_network


networks:
  valomemo_network: